# init vars and env

---

# detect linux distribution:

- name: detect linux distribution
  debug: msg="ansible_distribution = {{ ansible_distribution }}"

- name: detect linux distribution major version
  debug: msg="ansible_distribution_major_version = {{ ansible_distribution_major_version }}"

# init var dist:

- name: try set var dist = ubuntu
  set_fact: dist="ubuntu"
  when:
    - ansible_distribution == "Ubuntu"
    - ansible_distribution_major_version == "18"

- name: try set var dist = centos
  set_fact: dist="centos"
  when:
    - ansible_distribution == "CentOS"
    - ansible_distribution_major_version == "7" or ansible_distribution_major_version == "8"

- name: check if linux distribution is supported
  when: dist is undefined
  fail:
    msg: "The Linux distribution {{ ansible_distribution }} {{ ansible_distribution_major_version }} is not supported by this Ansible deployment script."

- name: check and print global var "dist"
  debug: msg="dist = {{ dist }}"

# init var timestamp:

- name: init var_timestamp by executing command
  shell: date +%Y-%m-%d_%H_%M_%S
  register: var_timestamp

- name: set global var "timestamp"
  set_fact:
    timestamp: "{{ var_timestamp.stdout }}"

# calculate the maximum memory used by JVM: xmx = MAX(total * 0.7, total - 800MB)

- name: init memory size
  shell: grep MemTotal /proc/meminfo | awk '{x=int($2/1024*0.7);y=int($2/1024-800);print (x<y?y:x)}'
  register: var_xmx

- name: set var "xmx"
  set_fact:
    xmx: "{{ var_xmx.stdout }}"

- name: print global var "timestamp"
  debug: msg="timestamp = {{ timestamp }}"

- name: print global var "xmx"
  debug: msg="xmx = {{ xmx }}"
